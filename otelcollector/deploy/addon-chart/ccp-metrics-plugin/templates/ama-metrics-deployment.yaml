apiVersion: apps/v1
kind: Deployment
metadata:
  name: ama-metrics-ccp
  namespace: {{ .Values.global.commonGlobals.Customer.Namespace }}
  labels:
    component: ama-metrics
spec:
  replicas: 1
  revisionHistoryLimit: 2
  paused: false
  selector:
    matchLabels:
      rsName: ama-metrics-ccp
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        rsName: ama-metrics-ccp
        kubernetes.azure.com/managedby: aks
        overlaymgr-ignore: "true"
      annotations:
        agentVersion: "0.0.0.1"
        schema-versions: "v1"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: ama-metrics-ccp-serviceaccount
      containers:
        - name: prometheus-collector
          image: "{{ .Values.AzureMonitorMetrics.ImageRepository }}:{{ .Values.AzureMonitorMetrics.ImageTag }}"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1
              memory: 500Mi
            requests:
              cpu: 150m
              memory: 250Mi
          env:
            - name: CLUSTER
              value: "{{ .Values.global.commonGlobals.Customer.AzureResourceID }}"
            - name: AKSREGION
              value: "{{ .Values.global.commonGlobals.Region }}"
            - name: MAC
              value: "true"
            - name: CCP_METRICS_ENABLED
              value: "true"
            - name: AZMON_COLLECT_ENV
              value: "false"
            - name: customEnvironment
              value: "{{ lower .Values.global.commonGlobals.CloudEnvironment }}"
            - name: OMS_TLD
              value: "opinsights.azure.com"
            - name: CONTROLLER_TYPE
              value: "ReplicaSet"
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONTAINER_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: prometheus-collector
                  resource: limits.cpu
                  divisor: 1m
            - name: CONTAINER_MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: prometheus-collector
                  resource: limits.memory
                  divisor: 1Mi
            - name: NODE_EXPORTER_NAME
              value: "" # Replace this with the node exporter shipped out of box with AKS
            - name: NODE_EXPORTER_TARGETPORT
              value: "19100"
            - name: NODE_EXPORTER_VERSION
              value: "v1.5.0" # Replace this with the version shipped by default
            - name: AGENT_VERSION
              value: {{ .Values.AzureMonitorMetrics.ImageTag }}
            - name: MODE
              value: "advanced" # only supported mode is 'advanced', any other value will be the default/non-advance mode
            - name: WINMODE
              value: "" # WINDOWS: only supported mode is 'advanced', any other value will be the default/non-advance mode
            - name: MINIMAL_INGESTION_PROFILE
              value: "true" # false scrapes all metrics
          securityContext:
            privileged: false
          volumeMounts:
            - mountPath: /etc/config/settings
              name: settings-vol-config
              readOnly: true
            - mountPath: /etc/config/settings/prometheus
              name: prometheus-config-vol
              readOnly: true
            - name: host-log-containers
              readOnly: true
              mountPath: /var/log/containers
            - name: host-log-pods
              readOnly: true
              mountPath: /var/log/pods
            - mountPath: /anchors/mariner
              name: anchors-mariner
              readOnly: true
            - mountPath: /anchors/ubuntu
              name: anchors-ubuntu
              readOnly: true
            - mountPath: /etc/kubernetes/secrets
              name: kubernetes-secrets
              readOnly: true
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - /opt/microsoft/liveness/livenessprobe.sh
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
        - name: msi-adapter
          image: "mcr.microsoft.com/aks/ccp/msi-adapter:master.230208.1"
          imagePullPolicy: IfNotPresent
          env:
          - name: SUBSCRIPTION_ID
            value: "{{ .Values.global.commonGlobals.Customer.SubscriptionId }}"
          - name: RESOURCE_GROUP_NAME
            value: "{{ .Values.global.commonGlobals.Customer.ResourceGroupName }}"
          - name: MANAGED_CLUSTER_NAME
            value: "{{ .Values.global.commonGlobals.Customer.ManagedClusterName }}"
          - name: CONTROL_PLANE_ID
            value: "{{ .Values.global.commonGlobals.Customer.Namespace }}"
          - name: CLIENT_NAME
            value: ama-metrics
          securityContext:
           capabilities:
             add:
               - NET_ADMIN
      affinity:
        nodeAffinity:
          # affinity to schedule on to ephemeral os node if its available
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: kubernetes.azure.com/mode
                    operator: In
                    values:
                      - system
            - weight: 50
              preference:
                matchExpressions:
                  - key: azuremonitor/metrics.replica.preferred
                    operator: In
                    values:
                      - "true"
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
                  - key: kubernetes.azure.com/cluster
                    operator: Exists
      volumes:
        - name: settings-vol-config
          configMap:
            name: ama-metrics-settings-configmap
            optional: true
        - name: prometheus-config-vol
          configMap:
            name: ama-metrics-prometheus-config
            optional: true
        - name: host-log-containers
          hostPath:
            path: /var/log/containers
        - name: host-log-pods
          hostPath:
            path: /var/log/pods
        - name: anchors-mariner
          hostPath:
            path: /etc/pki/ca-trust/anchors/
            type: DirectoryOrCreate
        - name: anchors-ubuntu
          hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
        - name: kubernetes-secrets
          projected:
            defaultMode: 420
            sources:
              - secret:
                  name: kube-apiserver-ssl
              - secret:
                  name: kube-apiserver-token
              - secret:
                  name: etcd-client-tls