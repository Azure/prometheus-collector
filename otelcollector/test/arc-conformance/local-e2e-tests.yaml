apiVersion: v1
kind: Namespace
metadata:
  name: sonobuoy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    component: sonobuoy
    namespace: sonobuoy
  name: sonobuoy-serviceaccount-sonobuoy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonobuoy-serviceaccount-sonobuoy
subjects:
- kind: ServiceAccount
  name: sonobuoy-serviceaccount
  namespace: sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    component: sonobuoy
    namespace: sonobuoy
  name: sonobuoy-serviceaccount-sonobuoy
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '/metrics'
  - '/logs'
  - '/logs/*'
  verbs:
  - 'get'
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: sonobuoy
data:
  config.json: |
    {"Description":"DEFAULT","UUID":"bf5c02ed-1948-48f1-b12d-5a2d74435e46","Version":"v0.20.0","ResultsDir":"/tmp/sonobuoy","Resources":["apiservices","certificatesigningrequests","clusterrolebindings","clusterroles","componentstatuses","configmaps","controllerrevisions","cronjobs","customresourcedefinitions","daemonsets","deployments","endpoints","ingresses","jobs","leases","limitranges","mutatingwebhookconfigurations","namespaces","networkpolicies","nodes","persistentvolumeclaims","persistentvolumes","poddisruptionbudgets","pods","podlogs","podsecuritypolicies","podtemplates","priorityclasses","replicasets","replicationcontrollers","resourcequotas","rolebindings","roles","servergroups","serverversion","serviceaccounts","services","statefulsets","storageclasses","validatingwebhookconfigurations","volumeattachments"],"Filters":{"Namespaces":".*","LabelSelector":""},"Limits":{"PodLogs":{"Namespaces":"","SonobuoyNamespace":true,"FieldSelectors":[],"LabelSelector":"","Previous":false,"SinceSeconds":null,"SinceTime":null,"Timestamps":false,"TailLines":null,"LimitBytes":null,"LimitSize":"","LimitTime":""}},"QPS":30,"Burst":50,"Server":{"bindaddress":"0.0.0.0","bindport":8080,"advertiseaddress":"","timeoutseconds":10800},"Plugins":null,"PluginSearchPath":["./plugins.d","/etc/sonobuoy/plugins.d","~/sonobuoy/plugins.d"],"Namespace":"sonobuoy","WorkerImage":"sonobuoy/sonobuoy:v0.20.0","ImagePullPolicy":"IfNotPresent","ImagePullSecrets":"","ProgressUpdatesPort":"8099"}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: sonobuoy
data:
  plugin-0.yaml: |
    podSpec:
      containers: []
      restartPolicy: Never
      serviceAccountName: sonobuoy-serviceaccount
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - key: kubernetes.io/e2e-evict-taint-key
        operator: Exists
    sonobuoy-config:
      driver: Job
      plugin-name: agenttests
      result-format: junit
    spec:
      env:
      # Update values of WORKLOAD_CLIENT_ID of the managed identity which has permission to query LA and Metrics API
      # Update value of TENANT_ID corresponding your managed identity
      - name: WORKLOAD_CLIENT_ID
        value: "5f13547e-a4e2-4efd-85fe-a2b03d5b8661"
      - name: TENANT_ID
        value: "72f988bf-86f1-41af-91ab-2d7cd011db47"
      - name: SUBSCRIPTION_ID
        value: "9b96ebbd-c57a-42d1-bbe9-b69296e4c7fb"
      - name: RESOURCE_GROUP
        value: "ci-dev-arc-wcus"
      - name: CLUSTER_NAME
        value: "ci-dev-arc-wcus"
      - name: AMA_METRICS_ARC_RELEASE_TRAIN
        value: "Pipeline"
      #- name: AMA_METRICS_ARC_VERSION
      #  value: ""
      # image tag should be updated if new tests being added after this image
      image: mcr.microsoft.com/azuremonitor/containerinsights/cidev/prometheus-collector:conf-053124
      imagePullPolicy: Always
      name: plugin
      resources: {}
      volumeMounts:
      - mountPath: /tmp/results
        name: results
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    run: sonobuoy-master
    sonobuoy-component: aggregator
    tier: analysis
  name: sonobuoy
  namespace: sonobuoy
spec:
  containers:
  - env:
    - name: SONOBUOY_ADVERTISE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: sonobuoy/sonobuoy:v0.20.0
    imagePullPolicy: IfNotPresent
    name: kube-sonobuoy
    volumeMounts:
    - mountPath: /etc/sonobuoy
      name: sonobuoy-config-volume
    - mountPath: /plugins.d
      name: sonobuoy-plugins-volume
    - mountPath: /tmp/sonobuoy
      name: output-volume
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  nodeSelector:
    kubernetes.io/os: linux
  tolerations:
  - key: "kubernetes.io/e2e-evict-taint-key"
    operator: "Exists"
  volumes:
  - configMap:
      name: sonobuoy-config-cm
    name: sonobuoy-config-volume
  - configMap:
      name: sonobuoy-plugins-cm
    name: sonobuoy-plugins-volume
  - emptyDir: {}
    name: output-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    sonobuoy-component: aggregator
  name: sonobuoy-aggregator
  namespace: sonobuoy
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    sonobuoy-component: aggregator
  type: ClusterIP
