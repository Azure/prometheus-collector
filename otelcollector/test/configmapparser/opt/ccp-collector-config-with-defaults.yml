exporters:
  file:
    path: /opt/microsoft/otelcollector/promotel.json
  otlp:
    compression: gzip
    endpoint: 127.0.0.1:55680
    retry_on_failure:
      enabled: false
    timeout: 12s
    tls:
      insecure: true
  prometheus:
    const_labels:
      cluster: $AZMON_CLUSTER_LABEL
    endpoint: 127.0.0.1:9091
processors:
  batch:
    send_batch_max_size: 7000
    send_batch_size: 7000
    timeout: 200ms
  resource:
    attributes:
    - action: upsert
      key: cluster
      value: $AZMON_CLUSTER_LABEL
    - action: insert
      from_attribute: service.name
      key: job
    - action: insert
      from_attribute: service.instance.id
      key: instance
extensions: null
receivers:
  prometheus:
    config:
      scrape_configs:
      - job_name: controlplane-apiserver
        kubernetes_sd_configs:
        - namespaces:
            names:
            - 6621f0e0b6bb76000183c743
          role: endpoints
        label_limit: 63
        label_name_length_limit: 511
        label_value_length_limit: 1023
        metric_relabel_configs:
        - action: hashmod
          modulus: 10000000000000000000
          regex: (.+)
          source_labels:
          - host
          target_label: hostalias
        - regex: ^(localhost|\[::1\]):443$$
          replacement: kube-apiserver
          source_labels:
          - host
          target_label: hostalias
        - action: replace
          regex: ^(.+);(.+)$$
          source_labels:
          - hostalias
          - host
          target_label: host
        - action: drop
          regex: (go_.*|process_(cpu|max|resident|virtual|open)_.*)
          source_labels:
          - __name__
        - action: labeldrop
          regex: hostalias
        relabel_configs:
        - action: keep
          regex: kube-apiserver;kube-apiserver
          source_labels:
          - __meta_kubernetes_pod_label_k8s_app
          - __meta_kubernetes_pod_container_name
        - action: replace
          regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        scheme: https
        scrape_interval: 30s
        tls_config:
          ca_file: /etc/kubernetes/secrets/ca.pem
          cert_file: /etc/kubernetes/secrets/client.pem
          insecure_skip_verify: true
          key_file: /etc/kubernetes/secrets/client-key.pem
      - follow_redirects: false
        job_name: controlplane-etcd
        kubernetes_sd_configs:
        - namespaces:
            names:
            - 6621f0e0b6bb76000183c743
          role: endpoints
        label_limit: 63
        label_name_length_limit: 511
        label_value_length_limit: 1023
        metric_relabel_configs:
        - action: hashmod
          modulus: 10000000000000000000
          regex: ^(.+)$$
          source_labels:
          - host
          target_label: hostalias
        - regex: ^hcp-kubernetes.*.svc.cluster.local:443$$
          replacement: kube-apiserver
          source_labels:
          - host
          target_label: hostalias
        - action: replace
          regex: ^(.+);(.+)$$
          source_labels:
          - hostalias
          - host
          target_label: host
        - action: drop
          regex: (go_.*|process_(cpu|max|resident|virtual|open)_.*)
          source_labels:
          - __name__
        - action: labeldrop
          regex: hostalias
        relabel_configs:
        - action: keep
          regex: etcd;2379
          source_labels:
          - __meta_kubernetes_service_label_app
          - __meta_kubernetes_pod_container_port_number
        - action: replace
          regex: (.*)
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: instance
        - action: drop
          regex: (etcd2-.*)
          source_labels:
          - __meta_kubernetes_pod_name
        scheme: https
        scrape_interval: 30s
        tls_config:
          ca_file: /etc/kubernetes/secrets/etcd-client-ca.crt
          cert_file: /etc/kubernetes/secrets/etcd-client.crt
          insecure_skip_verify: true
          key_file: /etc/kubernetes/secrets/etcd-client.key
    target_allocator: null
service:
  extensions: null
  pipelines:
    metrics:
      exporters:
      - otlp
      processors:
      - batch
      - resource
      receivers:
      - prometheus
  telemetry:
    logs:
      level: warn
      encoding: json
      output_paths:
      - collector.log.json
