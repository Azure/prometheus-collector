name: deploy-to-prod-cluster
on:
  workflow_dispatch:
    inputs:
      helmChartTag:
        description: 'HELM chart SemVer (semantic version) to deploy to prod cluster in the format of 0.0.6-main-09-12-2021-4a8de406'
        required: true
jobs:
  deploy-to-prod-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Set-workflow-initiator
        run: echo "Initiated by - ${GITHUB_ACTOR}"
      - name: Show-versions-On-deployment-machine
        run: lsb_release -a && helm version
      - name: Set-Helm-OCI-Experimental-feature
        run: echo "HELM_EXPERIMENTAL_OCI=1" >> $GITHUB_ENV
      - name: Set-MCR-Repository
        run: echo "MCR_REPOSITORY=mcr.microsoft.com/azuremonitor/containerinsights/cidev/prometheus-collector/images" >> $GITHUB_ENV
      - name: Set-MCR-HELM-CHART-Repository
        run: echo "MCR_REPOSITORY_HELM=mcr.microsoft.com/azuremonitor/containerinsights/cidev/prometheus-collector" >> $GITHUB_ENV 
      - name: Login-to-Azure-Key-Vault
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KEYVAULT_CREDENTIALS }}
      - name: Get-kube-config-from-Key-Vault-sp
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "cdpxacrcredskv"
          secrets: 'ci-prod-aks-eus-kubeconfig'
        id: GetKubeConfig-sp
      - name: Get-kube-config-from-Key-Vault-msi
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "cdpxacrcredskv"
          secrets: 'ci-prod-aks-msi-eus2-kubeconfig'
        id: GetKubeConfig-msi
      - name: Get-kube-config-sp
        run: rm -rf ~/.kube/ && mkdir ~/.kube/ && echo "${{ steps.GetKubeConfig-sp.outputs.ci-prod-aks-eus-kubeconfig }}" > ~/.kube/config
      - name: Pull-HELM-chart-and-Deploy-to-prod-cluster-sp
        run: helm pull oci://${{ env.MCR_REPOSITORY_HELM }} --version ${{ github.event.inputs.helmChartTag }} && helm upgrade --install prom-prod ./prometheus-collector-${{ github.event.inputs.helmChartTag }}.tgz --dependency-update --set image.repository=${{ env.MCR_REPOSITORY }} --set image.tag=${{ github.event.inputs.helmChartTag }} --set scrapeTargets.windowsExporter=true --set scrapeTargets.windowsKubeProxy=true --set scrapeTargets.prometheusCollectorHealth=true --set azureKeyVault.name="ci-prometheus-kv" --set azureKeyVault.pfxCertNames="{containerinsightsprodclusteraccountcert}" --set azureKeyVault.tenantId="72f988bf-86f1-41af-91ab-2d7cd011db47" --set clusterName="ci-prod-aks-eus" --set azureMetricAccount.defaultAccountName="containerinsightsprodclusteraccount" --set azureKeyVault.clientId=${{ secrets.CI_PROMETHEUS_KV_CLIENTID }} --set azureKeyVault.clientSecret=${{ secrets.CI_PROMETHEUS_KV_CLIENTSECRET }} --set mode.advanced=true -n monitoring --create-namespace
      - name: Get-kube-config-msi
        run: rm -rf ~/.kube/ && mkdir ~/.kube/ && echo "${{ steps.GetKubeConfig-msi.outputs.ci-prod-aks-msi-eus2-kubeconfig }}" > ~/.kube/config
      - name: Pull-HELM-chart-and-Deploy-to-prod-cluster-msi
        run: helm pull oci://${{ env.MCR_REPOSITORY_HELM }} --version ${{ github.event.inputs.helmChartTag }} && helm upgrade --install prom-prod-msi ./prometheus-collector-${{ github.event.inputs.helmChartTag }}.tgz --dependency-update --set image.repository=${{ env.MCR_REPOSITORY }} --set image.tag=${{ github.event.inputs.helmChartTag }} --set scrapeTargets.windowsExporter=true --set scrapeTargets.windowsKubeProxy=true --set scrapeTargets.prometheusCollectorHealth=true --set azureKeyVault.name="ci-prometheus-kv" --set azureKeyVault.pfxCertNames="{containerinsightsprodclusteraccountcert}" --set azureKeyVault.tenantId="72f988bf-86f1-41af-91ab-2d7cd011db47" --set clusterName="ci-prod-aks-msi-eus2" --set azureMetricAccount.defaultAccountName="containerinsightsprodclusteraccount" --set azureKeyVault.useManagedIdentity=true --set mode.advanced=true -n monitoring --create-namespace
