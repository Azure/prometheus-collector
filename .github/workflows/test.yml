name: build-and-push-image
on:
  push:
    branches:
      vishwa/test
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set-image-tag-prefix-dev
        run: echo "IMAGE_TAG_PREFIX_DEV=containerinsightsprod.azurecr.io/public/azuremonitor/containerinsights/cidev" >> $GITHUB_ENV
      - name: Set-image-tag-suffix
        run: echo "IMAGE_TAG_DATE=$(date +%m-%d-%Y)" >> $GITHUB_ENV
      - name: Set-image-tag-name
        run: echo "IMAGE_TAG_NAME=prometheus-collector" >> $GITHUB_ENV
      - name: Set-commit-sha
        run: echo "COMMIT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Checkout-code
        uses: actions/checkout@v2
      #- name: Install-golang
      #  uses: actions/setup-go@v2
      #  with:
      #    go-version: '^1.14.1'
      - name: Show-versions-(On-build-machine)
        run: lsb_release -a && go version
      - name: Install-build-dependencies
        run: sudo apt-get install build-essential -y
      - name: Build-source-code
        run: cd ./otelcollector/opentelemetry-collector-builder/ && make
      - name: Create-docker-image
        run: |
            cd ./otelcollector/ && docker build . --file Dockerfile -t $IMAGE_TAG_PREFIX_DEV:$IMAGE_TAG_NAME-$IMAGE_TAG_DATE-${GITHUB_SHA::8} --build-arg IMAGE_TAG=$IMAGE_TAG_NAME-$IMAGE_TAG_DATE-$COMMIT_SHA
      - name: List-docker-images
        run: docker images
      - name: Run-trivy-scanner-on-image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_TAG_PREFIX_DEV }}:${{ env.IMAGE_TAG_NAME }}-${{ env.IMAGE_TAG_DATE }}-${{ env.COMMIT_SHA }}
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'
          exit-code: '1'
      - name: Publish-Trivy-scan-results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
      - name: login-to-ACR
        uses: azure/docker-login@v1
        with:
            login-server: containerinsightsprod.azurecr.io
            username: ${{ secrets.RCA_PS_DI }}
            password: ${{ secrets.RCA_PS_CES }}
      - name: push-image-to-ACR
        run: |
            docker push ${{ env.IMAGE_TAG_PREFIX_DEV }}:${{ env.IMAGE_TAG_NAME }}-${{ env.IMAGE_TAG_DATE }}-${{ env.COMMIT_SHA }}
      - name: run helm
        run: helm version
