name: otelcollector-upgrade
on:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * *'
jobs:
  createPullRequest:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Upgrade otel
        id: upgrade
        run: |
          CURRENT_VERSION=$(cat OPENTELEMETRY_VERSION)
          bash -x ./internal/otel-upgrade-scripts/check-otel-version.sh
          VERSION=$(cat OPENTELEMETRY_VERSION)
          if [ "$CURRENT_VERSION" = "$VERSION" ]; then
            echo "No new version found. Exiting."
            exit 0
          fi
          echo "otelcollector version is $VERSION"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "ISNEWVERSION=true" >> $GITHUB_ENV

          # Add the contents of the CHANGELOGS to GitHub outputs
          if [ -f "PrometheusReceiverCHANGELOG.md" ]; then
            echo "prometheusreceiver_changelog<<EOF" >> $GITHUB_OUTPUT
            cat PrometheusReceiverCHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            rm -f PrometheusReceiverCHANGELOG.md
          fi
          if [ -f "TargetAllocatorCHANGELOG.md" ]; then
            echo "target_allocator_changelog<<EOF" >> $GITHUB_OUTPUT
            cat TargetAllocatorCHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            rm -f TargetAllocatorCHANGELOG.md
          fi
      
      - name: Check if an existing PR with this version already exists but hasn't been merged
        if: ${{ env.ISNEWVERSION == 'true' }}
        id: check_existing_pr
        run: |
          PR_EXISTS=$(gh pr list --head bot/otelcollector-upgrade-${{ env.VERSION }} --json number | jq length)
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Close older upgrade PRs
        if: ${{ env.ISNEWVERSION == 'true' && steps.check_existing_pr.outputs.exists == '0' }}
        run: |
          echo "Checking for older otelcollector upgrade PRs..."
          OLDER_PRS=$(gh pr list --search "is:open head:bot/otelcollector-upgrade-" --json number,headRefName)
          if [ "$(echo $OLDER_PRS | jq 'length')" -gt 0 ]; then
            echo "Found older upgrade PRs, closing them..."
            echo $OLDER_PRS | jq -c '.[]' | while read PR; do
              PR_NUM=$(echo $PR | jq -r '.number')
              PR_BRANCH=$(echo $PR | jq -r '.headRefName')
              if [ "$PR_BRANCH" != "bot/otelcollector-upgrade-${{ env.VERSION }}" ]; then
                echo "Closing PR #$PR_NUM ($PR_BRANCH) as a newer version is available"
                gh pr close $PR_NUM --comment "Closing in favor of a newer otelcollector version upgrade (${{ env.VERSION }})"
              fi
            done
          else
            echo "No older upgrade PRs found"
          fi
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Create Pull Request
        if: ${{ env.ISNEWVERSION == 'true' && steps.check_existing_pr.outputs.exists == '0' }}
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: Upgrade otelcollector to ${{ env.VERSION }}
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          signoff: false
          branch: bot/otelcollector-upgrade-${{ env.VERSION }}
          delete-branch: true
          title: 'build(deps): Upgrade otelcollector to ${{ env.VERSION }}'
          body: |
            This PR upgrades the otelcollector to the latest version available for the opentelemetry-collector and opentelemetry-operator.

            It was automatically generated by the GitHub Actions workflow.

            The summary of the OSS changelog is below:
            ${{ steps.upgrade.outputs.prometheusreceiver_changelog }}

            ${{ steps.upgrade.outputs.target_allocator_changelog }}
          draft: false

      - name: Check if the new PR exists
        id: check_new_pr
        run: |
          PR_EXISTS=$(gh pr list --head bot/otelcollector-upgrade-${{ env.VERSION }} --json number | jq length)
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Checkout PR branch if it exists
        uses: actions/checkout@v5
        if: steps.check_new_pr.outputs.exists != '0'
        with:
          ref: bot/otelcollector-upgrade-${{ env.VERSION }}
          token: ${{ steps.generate-token.outputs.token }}

      - name: Build otelcollector and related go binaries
        if: ${{ steps.cpr.outputs.pull-request-number }}
        id: run-make
        continue-on-error: true
        run: |
          cd otelcollector/opentelemetry-collector-builder
          make 2>&1 | tee make_output.txt
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "make_failed=true" >> $GITHUB_OUTPUT
            echo "make_errors<<EOF" >> $GITHUB_OUTPUT
            cat make_output.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "make_failed=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment Build Failed on PR
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'true' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
          body: |
            ⚠️ Building the otelcollector failed. Manual review for breaking changes is required. View build errors below.
            
            <details>
            <summary>View build errors</summary>
            
            ```
            ${{ steps.run-make.outputs.make_errors }}
            ```
            </details>

      - name: Comment Build Succeeded on PR
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'false' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
          body: |
            ✅ Building the otelcollector and related go binaries succeeded. No breaking changes were detected.
            The otelcollector was successfully upgraded to version ${{ env.VERSION }}.

      - name: Install Trivy
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'false' }}
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.46.1

      - name: Run Trivy scan on built binaries
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'false' }}
        id: trivy-scan
        continue-on-error: true
        run: |
          ./internal/otel-upgrade-scripts/updatetrivyignore.sh

          # Add the contents of cve_changes_report.txt to GitHub outputs
          if [ -f "cve_changes_report.txt" ]; then
            echo "cve_changes<<EOF" >> $GITHUB_OUTPUT
            cat cve_changes_report.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Comment CVE changes on PR
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'false' && steps.trivy-scan.outputs.cve_changes }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
          body: |
            ## CVE Changes Report
            
            The following CVE changes were detected when upgrading to version ${{ env.VERSION }}:
            
            ```
            ${{ steps.trivy-scan.outputs.cve_changes }}
            ```

            The trivyignore file was updated to ignore the new CVEs.

      - name: Commit Trivy ignore changes
        if: ${{ steps.cpr.outputs.pull-request-number && steps.run-make.outputs.make_failed == 'false' && steps.trivy-scan.outputs.cve_changes }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .trivyignore
          git commit -m "Update .trivyignore with new CVEs from version ${{ env.VERSION }}" || echo "No changes to commit"
          git push origin bot/otelcollector-upgrade-${{ env.VERSION }}    
